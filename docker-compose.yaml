version: "3.8"
services:
  ##### TRAEFIK #####
  traefik:
    image: traefik:latest
    container_name: tsi_traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    command:
      - "--configFile=/etc/traefik/static.yaml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config/:/etc/traefik:ro
      - ./traefik/certs:/etc/certs:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost.local`)"
      - "traefik.http.routers.traefik.tls=false"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    networks:
      - proxy
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: "10"
  ##### PWA #####
  pwa:
    build:
      context: ../tsi-pwa
      dockerfile: Dockerfile
    container_name: tsi_pwa
    ports:
      - 4000:4000
    networks:
      - tsi-internal-network
      - proxy
    depends_on:
      - traefik
      - api
      - dicebear
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pwa-tsi.entrypoints=http"
      - "traefik.http.routers.pwa-tsi.rule=Host(`app.pwa-tsi.local`)"
      - "traefik.http.routers.pwa-tsi.tls=false"
      - "traefik.docker.network=proxy"
      - "traefik.http.services.pwa-tsi.loadbalancer.server.port=3000"
  ##### API #####
  api:
    build:
      context: ../tsi-api
      dockerfile: Dockerfile
    container_name: tsi_api
    ports:
      - 8080:8080
    networks:
      - tsi-internal-network
      - proxy
    depends_on:
      - traefik
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-tsi.entrypoints=http"
      - "traefik.http.routers.api-tsi.rule=Host(`app.api-tsi.local`)"
      - "traefik.http.routers.api-tsi.tls=false"
      - "traefik.http.services.api-tsi.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
  ##### MYSQL #####
  db:
    image: mysql:8.1.0
    container_name: tsi_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      MYSQL_USER: dev
      MYSQL_PASSWORD: dev
    ports:
      - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - tsi-internal-network
      - proxy
  ##### Dicebear #####
  dicebear:
    image: dicebear/api:2
    container_name: tsi_dicebear
    restart: always
    networks:
      - tsi-internal-network
      - proxy
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dicebear-tsi.entrypoints=http"
      - "traefik.http.routers.dicebear-tsi.rule=Host(`app.dicebear-tsi.local`)"
      - "traefik.http.routers.dicebear-tsi.tls=false"
      - "traefik.http.services.dicebear-tsi.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"
  ##### Adminer #####
  adminer:
    image: adminer:latest
    container_name: tsi_adminer
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.entrypoints=http"
      - "traefik.http.routers.adminer.rule=Host(`adminer.localhost.local`)"
      - "traefik.http.routers.adminer.tls=false"
      - "traefik.docker.network=proxy"
    environment:
      - ADMINER_DESIGN=pepa-linha
    networks:
      - proxy
      - tsi-internal-network
volumes:
  db_data:
networks:
  tsi-internal-network:
    external: false
  proxy:
    external: true
